library AurasActions requires Auras, Filters, StaticProjectiles, HealLifestealRestore {

	group GroupEnums = CreateGroup();
	timer TimerEnums = CreateTimer();

	public function AuraActions() {
		unit ownerUnit = AuraOwnerUnit;
		unit targetUnit = AuraTargetUnit;
		boolean isEntered = IsEntered;
		boolean isOut = IsOut;
		boolean isActions = IsActions;
		integer actionsId = ActionsId;

		if (actionsId == alice4aura_tid) { // Alice 4
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1YC');
				UnitAddAbilityPermanent(targetUnit, 'A1Y7');
				UnitAddAbilityPermanent(targetUnit, 'A1Y8');
				UnitAddAbilityPermanent(targetUnit, 'A1Y9');
				UnitAddAbilityPermanent(targetUnit, 'A1YA');
				UnitAddAbilityPermanent(targetUnit, 'A1YB');
				udg_Smart_Integer[1] = R2I(GetHeroAgi(ownerUnit, true) * 0.50);
				udg_Smart_Integer[2] = udg_Smart_Integer[1] / 10000;
				udg_Smart_Integer[3] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000))/1000;
				udg_Smart_Integer[4] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000))/100;
				udg_Smart_Integer[5] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000) - (udg_Smart_Integer[4] * 100))/10;
				udg_Smart_Integer[6] = udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000) - (udg_Smart_Integer[4] * 100) - (udg_Smart_Integer[5] * 10);
				SetUnitAbilityLevelSwapped('A1Y7', targetUnit,  udg_Smart_Integer[2] + 1 );
				SetUnitAbilityLevelSwapped('A1Y8', targetUnit,  udg_Smart_Integer[3] + 1 );
				SetUnitAbilityLevelSwapped('A1Y9', targetUnit,  udg_Smart_Integer[4] + 1 );
				SetUnitAbilityLevelSwapped('A1YA', targetUnit,  udg_Smart_Integer[5] + 1 );
				SetUnitAbilityLevelSwapped('A1YB', targetUnit,  udg_Smart_Integer[6] + 1 );
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1Y7');
				UnitRemoveAbility(targetUnit, 'A1Y8');
				UnitRemoveAbility(targetUnit, 'A1Y9');
				UnitRemoveAbility(targetUnit, 'A1YA');
				UnitRemoveAbility(targetUnit, 'A1YB');
				UnitRemoveAbility(targetUnit, 'A1YC');
				UnitRemoveAbility(targetUnit, 'B002'); // buff
			}
			if (isActions) {
				udg_Smart_Integer[1] = R2I(GetHeroAgi(ownerUnit, true) * 0.50);
				udg_Smart_Integer[2] = udg_Smart_Integer[1] / 10000;
				udg_Smart_Integer[3] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000))/1000;
				udg_Smart_Integer[4] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000))/100;
				udg_Smart_Integer[5] = (udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000) - (udg_Smart_Integer[4] * 100))/10;
				udg_Smart_Integer[6] = udg_Smart_Integer[1] - (udg_Smart_Integer[2] * 10000) - (udg_Smart_Integer[3] * 1000) - (udg_Smart_Integer[4] * 100) - (udg_Smart_Integer[5] * 10);
				SetUnitAbilityLevelSwapped('A1Y7', targetUnit,  udg_Smart_Integer[2] + 1 );
				SetUnitAbilityLevelSwapped('A1Y8', targetUnit,  udg_Smart_Integer[3] + 1 );
				SetUnitAbilityLevelSwapped('A1Y9', targetUnit,  udg_Smart_Integer[4] + 1 );
				SetUnitAbilityLevelSwapped('A1YA', targetUnit,  udg_Smart_Integer[5] + 1 );
				SetUnitAbilityLevelSwapped('A1YB', targetUnit,  udg_Smart_Integer[6] + 1 );
			}

		} else if (actionsId == sanya5aura_tid) { // Sanya 5
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1ZN');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1ZN');
				UnitRemoveAbility(targetUnit, 'B02H'); // buff
			}
			if (isActions) {
				UnitDamageMagicToTarget(ownerUnit, targetUnit, 10);
			}

		} else if (actionsId == sanya5baura_tid) { // Sanya 5b
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1ZN');
			}
			if (isOut) {
			UnitRemoveAbility(targetUnit, 'A1ZN');
			UnitRemoveAbility(targetUnit, 'B02H'); // buff
			}
			if (isActions) {
				UnitDamagePureToTarget(ownerUnit, targetUnit, GetUnitMaxLife(targetUnit) * 0.005);
				SetUnitXY(targetUnit, GetPolarOffsetX(GetUnitX(targetUnit), 5, AngleBetweenWidgets(targetUnit, ownerUnit)),GetPolarOffsetY(GetUnitY(targetUnit), 10, AngleBetweenWidgets(targetUnit, ownerUnit)));
			}

		} else if (actionsId == sanya4aura_tid) { // Sanya 4
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1ZQ');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1ZQ');
				UnitRemoveAbility(targetUnit, 'B08N'); // buff
			}

		} else if (actionsId == sanya3aura_tid) { // Sanya 3
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1ZX');
				UnitAddAbilityPermanent(targetUnit, 'A1ZY');
				if (UnitHasTalent(ownerUnit, 'A0G0')) {
					SetUnitAbilityLevelSwapped('A1ZY', targetUnit,  2);
				}
				AddUnitModifier(targetUnit, CHANCE_MISS, 0.25);
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1ZX');
				UnitRemoveAbility(targetUnit, 'A1ZY');
				UnitRemoveAbility(targetUnit, 'B010'); // buff
				SubUnitModifier(targetUnit, CHANCE_MISS, 0.25);
			}

		} else if (actionsId == lonwon0aura_tid) { // Lonwon 0
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A20H');
				AddUnitModifier(targetUnit, INC_ENTER_TIME_NEG_BUFF, 0.2);
			}
			if (isOut) {
				SubUnitModifier(targetUnit, INC_ENTER_TIME_NEG_BUFF, 0.2);
				UnitRemoveAbility(targetUnit, 'A20H');
				UnitRemoveAbility(targetUnit, 'B01G'); // buff
			}

		} else if (actionsId == linx3aura_tid) { // Linx 3
			if (isActions) {
				UnitDamageMagicToTarget(ownerUnit, targetUnit, 30);
			}

		} else if (actionsId == radiance_tid) { // Radiance 1
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1E9');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1E9');
				UnitRemoveAbility(targetUnit, 'B04S'); // buff
			}
			if (isActions) {
				if (IsUnitType(targetUnit, UNIT_TYPE_HERO)) {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 35);
				} else {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 17.5);
				}
			}

		} else if (actionsId == radianceill_tid) { // Radiance 1 Illusion
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1E9');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1E9');
				UnitRemoveAbility(targetUnit, 'B04S'); // buff
			}
			if (isActions) {
				if (IsUnitType(targetUnit, UNIT_TYPE_HERO)) {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 17.5);
				} else {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 8.75);
				}
			}

		} else if (actionsId == radiance2_tid) { // Radiance 2
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1EA');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1EA');
				UnitRemoveAbility(targetUnit, 'B00G'); // buff
			}
			if (isActions) {
				if (IsUnitType(targetUnit, UNIT_TYPE_HERO)) {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 62.5);
				} else {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 31.25);
				}
			}

		} else if (actionsId == radiance2ill_tid) { // Radiance 2 Illusion
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A1EA');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A1EA');
				UnitRemoveAbility(targetUnit, 'B00G'); // buff
			}
			if (isActions) {
				if (IsUnitType(targetUnit, UNIT_TYPE_HERO)) {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 31.25);
				} else {
					UnitDamageMagicToTarget(ownerUnit, targetUnit, 15.625);
				}
			}

		} else if (actionsId == nullidai0_tid) {
			if (isEntered) {
				udg_Hero_HP_Reg_Items_Main[GetUnitUserData(ownerUnit)] = ( udg_Hero_HP_Reg_Items_Main[GetUnitUserData(ownerUnit)] + 5.00 );
			}
			if (isOut) {
				udg_Hero_HP_Reg_Items_Main[GetUnitUserData(ownerUnit)] = ( udg_Hero_HP_Reg_Items_Main[GetUnitUserData(ownerUnit)] - 5.00 );
			}
			if (isActions) {
				GroupAddUnit(GroupEnums, targetUnit);
				SaveHandleDataUnit(TimerEnums,ownerUnit);
				TimerStart(TimerEnums, 0., false, function() {
					unit heroFiltered = null;
					unit unitFiltered = null;
					EnumUnit = FirstOfGroup(GroupEnums);
					TempUnit = LoadHandleDataUnit(TimerEnums);
					while (EnumUnit != null) {
						if (IsUnitType(EnumUnit, UNIT_TYPE_HERO)) {
							if (heroFiltered == null || GetUnitLifePercentHook(heroFiltered) > GetUnitLifePercentHook(EnumUnit)) {
								heroFiltered = EnumUnit;
							}
						} else {
							if (unitFiltered == null || GetUnitLifePercentHook(unitFiltered) > GetUnitLifePercentHook(EnumUnit)) {
								unitFiltered = EnumUnit;
							}
						}
						GroupRemoveUnit(GroupEnums, EnumUnit);
						EnumUnit = FirstOfGroup(GroupEnums);
					}

					FilteredUnit = unitFiltered;
					
					if (heroFiltered != null) {
						FilteredUnit = heroFiltered;
					}
					CreateStaticProjectile(TempUnit, FilteredUnit, CreateUnit(GetOwningPlayer(TempUnit), 'e05Y', GetUnitX(TempUnit), GetUnitY(TempUnit), 0), nullidai0heal_tid, 300, 70, 70, false);
					heroFiltered = null;
					unitFiltered = null;
				});
			}

		} else if (actionsId == nullidai3_tid) { // Nullidai 3
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A02K');
				SetPlayerAbilityAvailable(GetOwningPlayer(targetUnit), 'A02K', false);
				UnitMakeAbilityPermanent(targetUnit, true, 'A02J');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A02K');
				UnitRemoveAbility(targetUnit, 'B00E'); // buff
			}


		} else if (actionsId == marcus5aura_tid) { // Marcus 5
			if (isEntered) {
				ApplyAbilityToUnit(ownerUnit, targetUnit, 'A237', 1, "soulburn");
				AddUnitModifier(targetUnit, DEC_ENTER_HEAL, 1.0);
				AddUnitModifier(targetUnit, DEC_ENTER_MANA, 1.0);
				AddUnitModifier(targetUnit, INC_ENTER_TIME_POS_BUFF, 1.0);
				AddUnitModifier(targetUnit, INC_ENTER_TIME_NEG_BUFF, 1.0);
				AddUnitModifier(targetUnit, INC_ENTER_STUN_TIME, 1.0);
			}
			if (isOut) {
			UnitRemoveAbility(targetUnit, 'B08Z'); // buff
				SubUnitModifier(targetUnit, DEC_ENTER_HEAL, 1.0);
				SubUnitModifier(targetUnit, DEC_ENTER_MANA, 1.0);
				SubUnitModifier(targetUnit, INC_ENTER_TIME_POS_BUFF, 1.0);
				SubUnitModifier(targetUnit, INC_ENTER_TIME_NEG_BUFF, 1.0);
				SubUnitModifier(targetUnit, INC_ENTER_STUN_TIME, 1.0);
			}
			if (isActions) {
				if (UnitHasMefisto(udg_Hero[GetPlayerId(GetOwningPlayer(ownerUnit)) + 1])) {
					UnitDamagePureToTarget(ownerUnit, targetUnit, GetUnitState(targetUnit, UNIT_STATE_LIFE) * 0.005);
				}
				if (UnitHasAbility(targetUnit, 'B08Z') == false) {
					ApplyAbilityToUnit(ownerUnit, targetUnit, 'A237', 1, "soulburn");
				}
			}

		} else if (actionsId == marcus5baura_tid) { // Marcus 5b
			if (isOut) {
				KillUnit(ownerUnit);
			}

		} else if (actionsId == orion2aura_tid) { // Orion 2
			if (isEntered) {
				UnitAddAbilityPermanent(targetUnit, 'A239');
				UnitAddAbilityPermanent(targetUnit, 'A23C');
				UnitAddAbilityPermanent(targetUnit, 'A23D');
				UnitAddAbilityPermanent(targetUnit, 'A23E');
			}
			if (isOut) {
				UnitRemoveAbility(targetUnit, 'A239');
				UnitRemoveAbility(targetUnit, 'A23C');
				UnitRemoveAbility(targetUnit, 'A23D');
				UnitRemoveAbility(targetUnit, 'A23E');
				UnitRemoveAbility(targetUnit, 'B090'); // buff
			}
			if (isActions) {

				if (GetUnitAbilityLevel(targetUnit, 'A23C') == 10) {
					if (GetUnitAbilityLevel(targetUnit, 'A23D') == 10) {
						if (GetUnitAbilityLevel(targetUnit, 'A23E') < 10) {
							SetUnitAbilityLevel(targetUnit, 'A23E', GetUnitAbilityLevel(targetUnit, 'A23E') + 1);
							SetUnitAbilityLevel(targetUnit, 'A23D', 1);
						}
					} else {
						SetUnitAbilityLevel(targetUnit, 'A23D', GetUnitAbilityLevel(targetUnit, 'A23D') + 1);
						SetUnitAbilityLevel(targetUnit, 'A23C', 1);
					}
				} else {
					SetUnitAbilityLevel(targetUnit,'A23C',GetUnitAbilityLevel(targetUnit, 'A23C') + 1);
				}
			}

		} else if (actionsId == bloop4aura_tid) { // Bloop 4
			if (isEntered) {
				if (GetCountTargetAuraByType(targetUnit, actionsId) == 0) {
					UnitAddAbilityPermanent(targetUnit, 'A23N');
				}
				udg_Hero_MP_Reg_Items_Main[GetUnitUserData(targetUnit)] = ( udg_Hero_MP_Reg_Items_Main[GetUnitUserData(targetUnit)] + 50.00 );
			}
			if (isOut) {
				if (GetCountTargetAuraByType(targetUnit, actionsId) == 1) {
					UnitRemoveAbility(targetUnit, 'A23N');
					UnitRemoveAbility(targetUnit, 'B093'); // buff
				}
				udg_Hero_MP_Reg_Items_Main[GetUnitUserData(targetUnit)] = ( udg_Hero_MP_Reg_Items_Main[GetUnitUserData(targetUnit)] - 50.00 );
			}

		} else if (actionsId == arthas3aura2_tid) { // Arthas 3 dmg
			if (isActions) {
				UnitDamageMagicToTarget(ownerUnit, targetUnit, 80);                        }

		} else if (actionsId == arthas3aura_tid) { // Arthas 3 heal
			if (isActions) {
				HealUnit(ownerUnit, targetUnit, 50 );
			}
		}

		ownerUnit = null;
		targetUnit = null;
	}

}
