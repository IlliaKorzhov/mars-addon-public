library ModifiersList {

	//Аддитивные модификаторы\\
	public key INC_OUT_HEAL;                //увеличение исходящего хила
	public key INC_ENTER_HEAL;              //увеличение входящего хила
	public key INC_OUT_MANA;                //увеличение исходящего восстановления маны
	public key INC_ENTER_MANA;              //увеличение входящего восстановления маны
	
	public key INC_OUT_STUN_TIME;           //увеличение исходящего стана
	public key INC_ENTER_STUN_TIME;         //увеличение входящего стана
		
	public key PERCENT_LIFESTEAL;           //% вампиризма
	public key INC_LIFESTEAL;               //увеличение исцеления от вампиризма
	
	public key INC_ANY_DMG;                 //увеличение любого урона

	public key INC_ENTER_TIME_POS_BUFF;     //% увеличение длительности входящих положительных бафов
	public key INC_ENTER_TIME_NEG_BUFF;     //% увеличение длительности входящих негативных бафов
	public key INC_OUT_TIME_POS_BUFF;     	//% увеличение длительности исходящих положительных бафов
	public key INC_OUT_TIME_NEG_BUFF;     	//% увеличение длительности исходящих негативных бафов
	//\\
	
	//Мультипликативные модификаторы\\
	public key DEC_OUT_HEAL;                //уменьшение исходящего хила
	public key DEC_ENTER_HEAL;              //уменьшение входящего хила
	public key DEC_OUT_MANA;                //уменьшение исходящего восстановления маны
	public key DEC_ENTER_MANA;              //уменьшение входящего восстановления маны
	
	public key DEC_OUT_STUN_TIME;           //уменьшение исходящего стана
	public key DEC_ENTER_STUN_TIME;         //уменьшение входящего стана
	
	public key CHANCE_BLOCK_ALL_DAMAGE;     //шанс полностью заблокировать любой урон
	public key PERCENT_BLOCK_ANY_DAMAGE;    //% блокирования любого урона
	public key CHANCE_DODGE_ATTACK;         //шанс увернуться от атаки
	public key CHANCE_MISS;                 //шанс промахнуться при атаке
	public key CHANCE_TRUE_STRIKE;          //шанс на верный удар

	public key DEC_ENTER_TIME_POS_BUFF;     //% уменьшение длительности входящих положительных бафов
	public key DEC_ENTER_TIME_NEG_BUFF;     //% уменьшение длительности входящих негативных бафов
	public key DEC_OUT_TIME_POS_BUFF;     	//% уменьшение длительности исходящих положительных бафов
	public key DEC_OUT_TIME_NEG_BUFF;     	//% уменьшение длительности исходящих негативных бафов
	//\\
	
	//Нестакающийся модификаторы\\
	public key NON_STACK_PT_BLOCK_ANY_DAMAGE;    //% блокирования любого урона (не стакается между собой)
	public key ADD_TIME_POS_BUFF;                //дополнительное время к положительным бафам
	public key ADD_TIME_NEG_BUFF;                //дополнительное время к негативным бафам
	public key DEC_PERIOD_BUFF;                  //% уменьшения длительности между тиками баффа
	public key DEC_TIME_NEG_PER_BUFF;            //% уменьшение длительности периодических негативных бафов
	//\\

	public function IsModifierAdditive(integer modifier) -> boolean {
		return
			modifier == INC_ENTER_TIME_POS_BUFF ||
			modifier == INC_ENTER_TIME_NEG_BUFF ||
			modifier == INC_OUT_TIME_POS_BUFF ||
			modifier == INC_OUT_TIME_NEG_BUFF ||
			modifier == INC_OUT_HEAL ||
			modifier == INC_ENTER_HEAL ||
			modifier == INC_OUT_MANA ||
			modifier == INC_ENTER_MANA ||
			modifier == INC_OUT_STUN_TIME ||
			modifier == INC_ENTER_STUN_TIME ||
			modifier == PERCENT_LIFESTEAL ||
			modifier == INC_LIFESTEAL ||
			modifier == INC_ANY_DMG
		;
	}
	
	public function IsModifierMultiplicative(integer modifier) -> boolean {
		return
			modifier == DEC_OUT_HEAL ||
			modifier == DEC_ENTER_HEAL ||
			modifier == DEC_OUT_MANA ||
			modifier == DEC_ENTER_MANA ||
			modifier == DEC_OUT_STUN_TIME ||
			modifier == DEC_ENTER_STUN_TIME ||
			modifier == CHANCE_BLOCK_ALL_DAMAGE ||
			modifier == PERCENT_BLOCK_ANY_DAMAGE ||
			modifier == NON_STACK_PT_BLOCK_ANY_DAMAGE ||
			modifier == CHANCE_DODGE_ATTACK ||
			modifier == CHANCE_MISS ||
			modifier == CHANCE_TRUE_STRIKE ||
			modifier == DEC_ENTER_TIME_POS_BUFF ||
			modifier == DEC_ENTER_TIME_NEG_BUFF ||
			modifier == DEC_OUT_TIME_POS_BUFF ||
			modifier == DEC_OUT_TIME_NEG_BUFF ||
			modifier == ADD_TIME_POS_BUFF ||
			modifier == ADD_TIME_NEG_BUFF ||
			modifier == DEC_TIME_NEG_PER_BUFF ||
			modifier == DEC_PERIOD_BUFF
		;
	}
	
	public function IsModifierPercentage(integer modifier) -> boolean {
		return
			modifier == CHANCE_BLOCK_ALL_DAMAGE ||
			modifier == PERCENT_BLOCK_ANY_DAMAGE ||
			modifier == NON_STACK_PT_BLOCK_ANY_DAMAGE ||
			modifier == PERCENT_LIFESTEAL ||
			modifier == CHANCE_DODGE_ATTACK ||
			modifier == CHANCE_MISS ||
			modifier == CHANCE_TRUE_STRIKE ||
			modifier == ADD_TIME_POS_BUFF ||
			modifier == ADD_TIME_NEG_BUFF ||
			modifier == INC_ANY_DMG
		;
	}
	
	public function IsModifierNonStacking(integer modifier) -> boolean {
		return
			modifier == DEC_PERIOD_BUFF ||
			modifier == DEC_TIME_NEG_PER_BUFF ||
			modifier == NON_STACK_PT_BLOCK_ANY_DAMAGE ||
			modifier == ADD_TIME_POS_BUFF ||
			modifier == ADD_TIME_NEG_BUFF
		;
	}

}